{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAEpC,IAAIC,EACAC,EACAC,EACAC,EAKJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAGtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAM,GAG1BA,EAAA,GAGP,CAnBAT,EAAKiB,iBAAiB,SA2CtB,SAAwBC,GACI,UAAtBA,EAAMC,OAAOC,MACfhB,EAAQc,EAAMC,OAAOE,MACrBC,QAAQC,IAAInB,IACmB,SAAtBc,EAAMC,OAAOC,KACtBf,EAAOa,EAAMC,OAAOE,MAEW,WAAtBH,EAAMC,OAAOC,OACtBd,EAASY,EAAMC,OAAOE,MAG1B,IArDArB,EAAKiB,iBAAiB,UAoBtB,SAAoCC,GAClCA,EAAMM,iBACNF,QAAQC,IAAI,SAASnB,KAErB,IAAK,IAAIqB,EAAI,EAAGA,EAAInB,EAAQmB,IAE1BH,QAAQC,IAAI,cAAcE,EAAIpB,GAC9BiB,QAAQC,IAAI,qBAAqBE,EAAIpB,EAAOqB,SAAStB,MACrDD,EAAWsB,EAAI,EACflB,EAAcJ,EAAUsB,EAAIpB,EAAOqB,SAAStB,IACzCuB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjB,MAAMmB,EAAc,uBAAuBpB,QAAeC,MAC1DoB,EAAA/B,GAASgC,OAAOC,QAAQH,EAAA,IAEzBI,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClB,MAAMwB,EAAa,sBAAsBzB,QAAeC,MACxDoB,EAAA/B,GAASgC,OAAOI,QAAQD,EAAA,GAIhC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nlet position;\nlet delay;\nlet step;\nlet amount;\n\nform.addEventListener('input', inputsListener);\nform.addEventListener('submit', createPromiseMultipleTimes);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  //\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n  //\n}\n\nfunction createPromiseMultipleTimes(event) {\n  event.preventDefault();\n  console.log(`delay ${delay}`);\n\n  for (let i = 0; i < amount; i++) {\n    //\n    console.log(`i * step - ${i * step}`);\n    console.log(`parseint(delay) - ${i * step + parseInt(delay)}`);\n    position = i + 1;\n    createPromise(position, i * step + parseInt(delay))\n      .then(({ position, delay }) => {\n        const fulfillText = `✅ Fulfilled promise ${position} in ${delay}ms`;\n        Notiflix.Notify.success(fulfillText);\n      })\n      .catch(({ position, delay }) => {\n        const rejectText = `❌ Rejected promise ${position} in ${delay}ms`;\n        Notiflix.Notify.failure(rejectText);\n      });\n    //\n  }\n}\n\nfunction inputsListener(event) {\n  if (event.target.name === 'delay') {\n    delay = event.target.value;\n    console.log(delay);\n  } else if (event.target.name === 'step') {\n    step = event.target.value;\n    // console.log(step);\n  } else if (event.target.name === 'amount') {\n    amount = event.target.value;\n    // console.log(amount);\n  }\n}\n\n// console.log(createPromise(2, 1500));\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","target","name","value","console","log","preventDefault","i","parseInt","then","fulfillText","$parcel$interopDefault","Notify","success","catch","rejectText","failure"],"version":3,"file":"03-promises.6fe9653e.js.map"}